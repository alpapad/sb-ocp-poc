<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.test</groupId>
    <artifactId>docker-mvn-poc</artifactId>
    <version>2023.12.7-SNAPSHOT</version>
    <packaging>pom</packaging> 
    <modules>
        <module>base-image</module>
        <module>dummy-config-map</module>
        <module>base-fluentd</module>
        <module>base-logging</module>
        <module>grpc-proto</module>
        <module>spring-grpc-server</module>
        <module>spring-grpc-client</module>
        <module>kafka-payload-proto</module>
        <module>kafka-receiver</module>
        <module>volume-copy-img</module>
    </modules>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.version>3.10.1</maven.compiler.version>
        <spring.boot.version>2.6.11</spring.boot.version>
        <spring.cloud.version>2021.0.4</spring.cloud.version>
        <fabric8.docker.version>0.40.2</fabric8.docker.version>
        <logstash-logback-encoder.version>6.6</logstash-logback-encoder.version>
        <fluency.version>2.5.1</fluency.version>
        <protobuf.version>3.21.6</protobuf.version>
        <protoc.version>3.20.0</protoc.version>
        <protobuf-plugin.version>0.6.1</protobuf-plugin.version>
        <grpc.version>1.49.1</grpc.version>
        <grpc-server.version>2.13.1.RELEASE</grpc-server.version>
        <jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>
        <os.maven-plugin.version>1.7.0</os.maven-plugin.version>
        <os.detected.classifier>linux-x86_64</os.detected.classifier>
        <local.docker.registry>alpapad/</local.docker.registry>
        <docker.java.base.image>${local.docker.registry}base-image:${project.version}</docker.java.base.image>
        <docker.base.image>registry.access.redhat.com/ubi8/openjdk-11:1.13-1.1655306377</docker.base.image>
        <fluentd.base.image>govtechsg/fluentd-elasticsearch:1.13.0</fluentd.base.image>
        <helm.maven.version>6.3.0</helm.maven.version>
        <lombok.version>1.18.24</lombok.version>
        <sonar.plugin.version>3.9.1.2184</sonar.plugin.version>
        <violations.plugin.version>1.47.0</violations.plugin.version>
        <surefire.report.plugin.version>3.0.0</surefire.report.plugin.version>
        <surefire.plugin.version>3.0.0</surefire.plugin.version>
        <jacoco.plugin.version>0.8.8</jacoco.plugin.version>
        <failsafe.plugin.version>3.0.0</failsafe.plugin.version>
        <dependency.check.plugin.version>7.1.0</dependency.check.plugin.version>
        <flatten.plugin.version>1.3.0</flatten.plugin.version>
        <git.commit.id.plugin.version>5.0.0</git.commit.id.plugin.version>
        <snakeyaml.version>1.33</snakeyaml.version>
        <enforcer.plugin.version>3.2.1</enforcer.plugin.version>
        <aspectj.version>1.9.19</aspectj.version>
        <allure.version>2.22.1</allure.version>
        <javadoc.fail.on.error>false</javadoc.fail.on.error>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.language>java</sonar.language>
        <allure.results.directory>${maven.multiModuleProjectDirectory}/target/allure-results</allure.results.directory>
        <allure.install.directory>/tmp/.allure</allure.install.directory>
        <!--allure.link.issue.pattern>https://example.org/issue/{}</allure.link.issue.pattern>
        <allure.link.tms.pattern>https://example.org/tms/{}</allure.link.tms.pattern-->
        <allure.skip>true</allure.skip>
    </properties>
    <dependencies>
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit5</artifactId>
            <version>${allure.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.test</groupId>
                <artifactId>base-logging</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.test</groupId>
                <artifactId>grpc-proto</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.test</groupId>
                <artifactId>kafka-payload-proto</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.devh</groupId>
                <artifactId>grpc-server-spring-boot-starter</artifactId>
                <version>${grpc-server.version}</version>
            </dependency>
            <dependency>
                <groupId>net.devh</groupId>
                <artifactId>grpc-client-spring-boot-starter</artifactId>
                <version>${grpc-server.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <!-- Java 9+ compatibility - Do NOT update to 2.0.0 -->
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${jakarta.annotation-api.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sndyuk</groupId>
                <artifactId>logback-more-appenders</artifactId>
                <version>1.8.7</version>
            </dependency>
            <dependency>
                <groupId>org.komamitsu</groupId>
                <artifactId>fluency-core</artifactId>
                <version>${fluency.version}</version>
            </dependency>
            <dependency>
                <groupId>org.komamitsu</groupId>
                <artifactId>fluency-fluentd</artifactId>
                <version>${fluency.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os.maven-plugin.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <testFailureIgnore>false</testFailureIgnore>
                        <argLine>@{argLine} -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"</argLine>
                        <systemPropertyVariables combine.children="append">
                            <junit.jupiter.extensions.autodetection.enabled>true</junit.jupiter.extensions.autodetection.enabled>
                            <allure.results.directory>${allure.results.directory}</allure.results.directory>
                            <allure.install.directory>/tmp/.allure</allure.install.directory>
                        </systemPropertyVariables>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.aspectj</groupId>
                            <artifactId>aspectjweaver</artifactId>
                            <version>${aspectj.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <executions>
                        <execution>
                            <id>build-info</id>
                            <goals>
                                <goal>build-info</goal>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <configuration>
                        <parameters>true</parameters>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${fabric8.docker.version}</version>
                    <executions>
                        <execution>
                            <id>default</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <images>
                            <image>
                                <name>${local.docker.registry}${project.artifactId}</name>
                                <alias>dockerfile</alias>
                                <build>
                                    <tags>
                                        <tag>latest</tag>
                                        <tag>${project.version}</tag>
                                    </tags>
                                    <contextDir>${project.basedir}/src/main/docker</contextDir>
                                    <assembly>
                                        <descriptorRef>artifact</descriptorRef>
                                    </assembly>
                                </build>
                            </image>
                        </images>
                    </configuration>
                </plugin>
                <!-- plugin>
              <groupId>io.kokuwa.maven</groupId>
              <artifactId>helm-maven-plugin</artifactId>
              <version>${helm.maven.version}</version>
               <executions>
                  <execution>
                     <goals>
                        <goal>init</goal>
                        <goal>lint</goal>
                        <goal>package</goal>
                     </goals>
                     <configuration>
                        <chartDirectory>${project.basedir}</chartDirectory>
                        <chartVersion>${project.version}</chartVersion>
                     </configuration>
                  </execution>
               </executions>
            </plugin -->
                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>${protobuf-plugin.version}</version>
                    <configuration>
                        <protocArtifact>com.google.protobuf:protoc:${protoc.version}:exe:${os.detected.classifier}</protocArtifact>
                        <pluginId>grpc-java</pluginId>
                        <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                        <writeDescriptorSet>true</writeDescriptorSet>
                    </configuration>
                    <executions>
                        <execution>
                            <id>protoc-java</id>
                            <goals>
                                <goal>compile</goal>
                                <goal>compile-custom</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten.plugin.version}</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <version>${git.commit.id.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>get-the-git-infos</id>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                            <phase>initialize</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>true</verbose>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <offline>true</offline>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                        <includeOnlyProperties>
                            <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
                            <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
                        </includeOnlyProperties>
                        <commitIdGenerationMode>full</commitIdGenerationMode>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.qameta.allure</groupId>
                    <artifactId>allure-maven</artifactId>
                    <version>2.12.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>2.12.0</version>
                <configuration>
                    <resultsDirectory>${maven.multiModuleProjectDirectory}/target/allure-results/</resultsDirectory>
                    <reportDirectory>${maven.multiModuleProjectDirectory}/target/site/allure</reportDirectory>
                </configuration>
            </plugin-->
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>cicd</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!--sonar-->
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${sonar.plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${dependency.check.plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <ossindexAnalyzerEnabled>true</ossindexAnalyzerEnabled>
                            <format>ALL</format>
                            <opensslAnalyzerEnabled>true</opensslAnalyzerEnabled>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe.plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.plugin.version}</version>
                        <configuration>
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <!-- attached to Maven test phase -->
                            <execution>
                                <id>report</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>${enforcer.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>enforce-no-snapshots</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <skip>${snapshot.build}</skip>
                                    <rules>
                                        <requireReleaseDeps>
                                            <message>No Snapshots Allowed!</message>
                                        </requireReleaseDeps>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>4.0.0-M4</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>